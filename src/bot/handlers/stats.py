from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select, func
from ...database.models import User, VoiceMessage

router = Router()

@router.message(Command("stats"))
async def handle_stats(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    voice_count = await session.scalar(
        select(func.count(VoiceMessage.id))
        .where(VoiceMessage.user_id == message.from_user.id)
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    referrals_count = await session.scalar(
        select(func.count(User.id))
        .where(User.referrer_id == message.from_user.id)
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    total_duration = await session.scalar(
        select(func.sum(VoiceMessage.duration))
        .where(VoiceMessage.user_id == message.from_user.id)
    ) or 0
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await session.scalar(
        select(User).where(User.id == message.from_user.id)
    )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    stats_text = (
        "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
        f"üé§ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {voice_count}\n"
        f"‚è± –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {total_duration // 60} –º–∏–Ω. {total_duration % 60} —Å–µ–∫.\n"
        f"üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {referrals_count}\n"
        f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.created_at.strftime('%d.%m.%Y')}\n"
        f"üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user.last_activity.strftime('%d.%m.%Y %H:%M')}\n\n"
        "üîó –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É,\n"
        "–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /referral"
    )
    
    await message.answer(stats_text) 